# Summary of the analysis
summary(res.aov)
# #################### Effect of op_type for each ring_id ####################
# one.way <- task_df %>%
#   group_by(ring_id) %>%
#   anova_test(dv = norm_abs_diff, wid = part_id, within = op_type) %>%
#   get_anova_table() %>%
#   adjust_pvalue(method = "bonferroni")
# one.way
#
# #################### Effect of ring_id for each op_type ####################
# one.way <- task_df %>%
#   group_by(op_type) %>%
#   anova_test(dv = norm_abs_diff, wid = part_id, within = ring_id) %>%
#   get_anova_table() %>%
#   adjust_pvalue(method = "bonferroni")
# one.way
# #################### Pairwise comparisons between op_type groups for each ring_id ####################
# pwc1 <- task_df %>%
#   group_by(fitts_id_level) %>%
#   pairwise_t_test(
#     norm_abs_diff ~ op_type, paired = TRUE,
#     p.adjust.method = "bonferroni"
#     )
# pwc1
# # Create a box plot
# pwc1 <- pwc1 %>% add_xy_position(x = "op_type", group = "fitts_id_level")
# bxp2 <- ggboxplot(
#   task_df, x = "op_type", y = "norm_abs_diff",
#   color = "fitts_id_level", palette = "jco"
# ) +
#   stat_pvalue_manual(
#     pwc1, color = "fitts_id_level", group.by = "legend.var",
#     bracket.nudge.y = 0.2, step.increase = 0.15, label.size = 3, vjust = 0.1,
#     tip.length = 0, y.position = 20
#   )
# bxp2
#
#
# #################### Pairwise comparisons between ring_id groups for each op_type ####################
# pwc2 <- task_df %>%
#   group_by(op_type) %>%
#   pairwise_t_test(
#     norm_abs_diff ~ fitts_id_level, paired = TRUE,
#     p.adjust.method = "bonferroni"
#     )
# pwc2
# # Create a box plot
# pwc2 <- pwc2 %>% add_xy_position(x = "fitts_id_level", group = "op_type")
# bxp3 <- ggboxplot(
#   task_df, x = "fitts_id_level", y = "norm_abs_diff",
#   color = "op_type", palette = "jco"
# ) +
#   stat_pvalue_manual(
#     pwc2, color = "op_type", group.by = "legend.var",
#     bracket.nudge.y = 0.2, step.increase = 0.5, label.size = 3, vjust = 0.1,
#     tip.length = 0, y.position = 20
#   )
# bxp3
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(ggcorrplot)
library(lmerTest)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(ggcorrplot)
library(lmerTest)
setwd("C:/Users/micha/OneDrive/My_GitHub_Repos/FittsTaxonomy/user_study_results/fitts_headers/")
kt_df <- read_csv("kt.csv", show_col_types = FALSE)
teleop_df <- read_csv("teleop.csv", show_col_types = FALSE)
# Fit the multiple regression model - Kinesthetic teaching
model <- lm(move_time ~ eff_trans_fid + eff_rot_fid + (1+eff_trans_fid|part_id) + (1+eff_rot_fid|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the mixed multiple regression model with interaction - Kinesthetic teaching
model <- lmer(move_time ~ eff_trans_fid * eff_rot_fid + (1+eff_trans_fid|part_id) + (1+eff_rot_fid|part_id) + (1|part_id), data = kt_df)
summary(model)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(ggcorrplot)
library(lmerTest)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/micha/OneDrive/My_GitHub_Repos/FittsTaxonomy/user_study_results/combined_headers/")
kt_df <- read_csv("kt.csv", show_col_types = FALSE)
teleop_df <- read_csv("teleop.csv", show_col_types = FALSE)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(ggcorrplot)
library(lmerTest)
# Fit the multiple regression model - Kinesthetic teaching
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the mixed multiple regression model with interaction - Kinesthetic teaching
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Fit the multiple regression model - teleoperation
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = teleop_df)
# Summarize the model
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the mixed multiple regression model with interaction - teleoperation
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = teleop_df)
summary(model)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(ggcorrplot)
library(lmerTest)
setwd("C:/Users/micha/OneDrive/My_GitHub_Repos/FittsTaxonomy/user_study_results/fitts_headers/")
kt_df <- read_csv("kt.csv", show_col_types = FALSE)
teleop_df <- read_csv("teleop.csv", show_col_types = FALSE)
# Fit the multiple regression model - Kinesthetic teaching
model <- lm(move_time ~ nom_trans_fid + nom_rot_fid + (1+nom_trans_fid|part_id) + (1+nom_rot_fid|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the mixed multiple regression model with interaction - Kinesthetic teaching
model <- lmer(move_time ~ nom_trans_fid * nom_rot_fid + (1+nom_trans_fid|part_id) + (1+nom_rot_fid|part_id) + (1|part_id), data = kt_df)
summary(model)
# Fit the mixed multiple regression model with interaction - Kinesthetic teaching
# model <- lmer(move_time ~ nom_trans_fid * nom_rot_fid + (1+nom_trans_fid|part_id) + (1+nom_rot_fid|part_id) + (1|part_id), data = kt_df)
model <- lmer(move_time ~ nom_trans_fid * nom_rot_fid + (1|part_id), data = kt_df)
# Fit the multiple regression model - Kinesthetic teaching
model <- lm(move_time ~ nom_trans_fid + nom_rot_fid + (1+nom_trans_fid|part_id) + (1+nom_rot_fid|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the mixed multiple regression model with interaction - Kinesthetic teaching
# model <- lmer(move_time ~ nom_trans_fid * nom_rot_fid + (1+nom_trans_fid|part_id) + (1+nom_rot_fid|part_id) + (1|part_id), data = kt_df)
model <- lmer(move_time ~ nom_trans_fid * nom_rot_fid + (1|part_id), data = kt_df)
summary(model)
# Fit the multiple regression model - Kinesthetic teaching
model <- lm(move_time ~ nom_trans_fid + nom_rot_fid + (1+nom_trans_fid|part_id) + (1+nom_rot_fid|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the mixed multiple regression model with interaction - Kinesthetic teaching
# model <- lmer(move_time ~ nom_trans_fid * nom_rot_fid + (1+nom_trans_fid|part_id) + (1+nom_rot_fid|part_id) + (1|part_id), data = kt_df)
# model <- lmer(move_time ~ nom_trans_fid * nom_rot_fid + (1|part_id), data = kt_df)
model <- lmer(move_time ~ nom_rot_fid * nom_trans_fid + (1|part_id), data = kt_df)
summary(model)
# Fit the multiple regression model - Kinesthetic teaching
model <- lm(move_time ~ nom_trans_fid + nom_rot_fid + (1+nom_trans_fid|part_id) + (1+nom_rot_fid|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the mixed multiple regression model with interaction - Kinesthetic teaching
# model <- lmer(move_time ~ nom_trans_fid * nom_rot_fid + (1+nom_trans_fid|part_id) + (1+nom_rot_fid|part_id) + (1|part_id), data = kt_df)
model <- lmer(move_time ~ nom_trans_fid * nom_rot_fid + (1|part_id), data = kt_df)
summary(model)
model <- lmer(move_time ~ nom_rot_fid * nom_trans_fid + (1|part_id), data = kt_df)
summary(model)
# Fit the multiple regression model - Kinesthetic teaching
model <- lm(move_time ~ nom_trans_fid + nom_rot_fid + (1+nom_trans_fid|part_id) + (1+nom_rot_fid|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the mixed multiple regression model with interaction - Kinesthetic teaching
# model <- lmer(move_time ~ nom_trans_fid * nom_rot_fid + (1+nom_trans_fid|part_id) + (1+nom_rot_fid|part_id) + (1|part_id), data = kt_df)
model <- lmer(move_time ~ nom_trans_fid * nom_rot_fid + (1|part_id), data = kt_df)
summary(model)
# Fit the multiple regression model - teleoperation
model <- lm(move_time ~ nom_trans_fid + nom_rot_fid + (1+nom_trans_fid|part_id) + (1+nom_rot_fid|part_id) + (1|part_id), data = teleop_df)
# Summarize the model
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the mixed multiple regression model with interaction - teleoperation
# model <- lmer(move_time ~ nom_trans_fid * nom_rot_fid + (1+nom_trans_fid|part_id) + (1+nom_rot_fid|part_id) + (1|part_id), data = teleop_df)
model <- lmer(move_time ~ nom_trans_fid * nom_rot_fid + (1|part_id), data = teleop_df)
summary(model)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
setwd("C:/Users/micha/OneDrive/My_GitHub_Repos/FittsTaxonomy/user_study_results/fitts_headers/")
task_df <- read_csv("overall.csv", show_col_types = FALSE)
######################### get mean and sd (or se) #########################
task_df %>%
group_by(op_type) %>%
get_summary_stats(norm_abs_diff, type = "mean_sd")
setwd("C:/Users/micha/OneDrive/My_GitHub_Repos/FittsTaxonomy/user_study_results/fitts_headers/")
task_df <- read_csv("overall.csv", show_col_types = FALSE)
######################### get mean and sd (or se) #########################
task_df %>%
group_by(op_type) %>%
get_summary_stats(norm_abs_diff, type = "mean_sd")
bxp1 <- ggboxplot(task_df, x = "op_type", y = "norm_abs_diff",
color = "op_type", palette = c("#00AFBB", "#E7B800", "#FC4E07"),
order = c("kt", "teleop"),
ylab = "Move Time (s)", xlab = "Operation Type")
bxp1
######################### check for outliers #########################
task_df %>%
group_by(op_type) %>%
identify_outliers(norm_abs_diff)
######################### check normality #########################
task_df %>%
group_by(op_type) %>%
shapiro_test(norm_abs_diff)
######################### plot normality ########C
######################### one-way mixed ANOVA test #########################
# res.aov <- anova_test(
#   data = task_df, dv = norm_abs_diff, wid = part_id,
#   within = op_type
#   )
# get_anova_table(res.aov)
# Compute the analysis of variance
res.aov <- aov(norm_abs_diff ~ op_type, data = task_df)
# Summary of the analysis
summary(res.aov)
# #################### Effect of op_type for each ring_id ####################
# one.way <- task_df %>%
#   group_by(ring_id) %>%
#   anova_test(dv = norm_abs_diff, wid = part_id, within = op_type) %>%
#   get_anova_table() %>%
#   adjust_pvalue(method = "bonferroni")
# one.way
#
# #################### Effect of ring_id for each op_type ####################
# one.way <- task_df %>%
#   group_by(op_type) %>%
#   anova_test(dv = norm_abs_diff, wid = part_id, within = ring_id) %>%
#   get_anova_table() %>%
#   adjust_pvalue(method = "bonferroni")
# one.way
# #################### Pairwise comparisons between op_type groups for each ring_id ####################
# pwc1 <- task_df %>%
#   group_by(fitts_id_level) %>%
#   pairwise_t_test(
#     norm_abs_diff ~ op_type, paired = TRUE,
#     p.adjust.method = "bonferroni"
#     )
# pwc1
# # Create a box plot
# pwc1 <- pwc1 %>% add_xy_position(x = "op_type", group = "fitts_id_level")
# bxp2 <- ggboxplot(
#   task_df, x = "op_type", y = "norm_abs_diff",
#   color = "fitts_id_level", palette = "jco"
# ) +
#   stat_pvalue_manual(
#     pwc1, color = "fitts_id_level", group.by = "legend.var",
#     bracket.nudge.y = 0.2, step.increase = 0.15, label.size = 3, vjust = 0.1,
#     tip.length = 0, y.position = 20
#   )
# bxp2
#
#
# #################### Pairwise comparisons between ring_id groups for each op_type ####################
# pwc2 <- task_df %>%
#   group_by(op_type) %>%
#   pairwise_t_test(
#     norm_abs_diff ~ fitts_id_level, paired = TRUE,
#     p.adjust.method = "bonferroni"
#     )
# pwc2
# # Create a box plot
# pwc2 <- pwc2 %>% add_xy_position(x = "fitts_id_level", group = "op_type")
# bxp3 <- ggboxplot(
#   task_df, x = "fitts_id_level", y = "norm_abs_diff",
#   color = "op_type", palette = "jco"
# ) +
#   stat_pvalue_manual(
#     pwc2, color = "op_type", group.by = "legend.var",
#     bracket.nudge.y = 0.2, step.increase = 0.5, label.size = 3, vjust = 0.1,
#     tip.length = 0, y.position = 20
#   )
# bxp3
######################### one-way mixed ANOVA test #########################
# res.aov <- anova_test(
#   data = task_df, dv = norm_abs_diff, wid = part_id,
#   within = op_type
#   )
# get_anova_table(res.aov)
# Compute the analysis of variance
res.aov <- aov(norm_abs_diff ~ op_type, data = task_df)
get_anova_table(res.aov)
# Summary of the analysis
# summary(res.aov)
# #################### Effect of op_type for each ring_id ####################
# one.way <- task_df %>%
#   group_by(ring_id) %>%
#   anova_test(dv = norm_abs_diff, wid = part_id, within = op_type) %>%
#   get_anova_table() %>%
#   adjust_pvalue(method = "bonferroni")
# one.way
#
# #################### Effect of ring_id for each op_type ####################
# one.way <- task_df %>%
#   group_by(op_type) %>%
#   anova_test(dv = norm_abs_diff, wid = part_id, within = ring_id) %>%
#   get_anova_table() %>%
#   adjust_pvalue(method = "bonferroni")
# one.way
# #################### Pairwise comparisons between op_type groups for each ring_id ####################
# pwc1 <- task_df %>%
#   group_by(fitts_id_level) %>%
#   pairwise_t_test(
#     norm_abs_diff ~ op_type, paired = TRUE,
#     p.adjust.method = "bonferroni"
#     )
# pwc1
# # Create a box plot
# pwc1 <- pwc1 %>% add_xy_position(x = "op_type", group = "fitts_id_level")
# bxp2 <- ggboxplot(
#   task_df, x = "op_type", y = "norm_abs_diff",
#   color = "fitts_id_level", palette = "jco"
# ) +
#   stat_pvalue_manual(
#     pwc1, color = "fitts_id_level", group.by = "legend.var",
#     bracket.nudge.y = 0.2, step.increase = 0.15, label.size = 3, vjust = 0.1,
#     tip.length = 0, y.position = 20
#   )
# bxp2
#
#
# #################### Pairwise comparisons between ring_id groups for each op_type ####################
# pwc2 <- task_df %>%
#   group_by(op_type) %>%
#   pairwise_t_test(
#     norm_abs_diff ~ fitts_id_level, paired = TRUE,
#     p.adjust.method = "bonferroni"
#     )
# pwc2
# # Create a box plot
# pwc2 <- pwc2 %>% add_xy_position(x = "fitts_id_level", group = "op_type")
# bxp3 <- ggboxplot(
#   task_df, x = "fitts_id_level", y = "norm_abs_diff",
#   color = "op_type", palette = "jco"
# ) +
#   stat_pvalue_manual(
#     pwc2, color = "op_type", group.by = "legend.var",
#     bracket.nudge.y = 0.2, step.increase = 0.5, label.size = 3, vjust = 0.1,
#     tip.length = 0, y.position = 20
#   )
# bxp3
######################## one-way mixed ANOVA test #########################
res.aov <- anova_test(
data = task_df, dv = norm_abs_diff, wid = part_id,
within = op_type
)
View(task_df)
View(task_df)
######################### one-way mixed ANOVA test #########################
# res.aov <- anova_test(
#   data = task_df, dv = norm_abs_diff, wid = part_id,
#   within = op_type
#   )
# get_anova_table(res.aov)
# Compute the analysis of variance
res.aov <- aov(norm_abs_diff ~ op_type, data = task_df)
# Summary of the analysis
summary(res.aov)
# #################### Effect of op_type for each ring_id ####################
# one.way <- task_df %>%
#   group_by(ring_id) %>%
#   anova_test(dv = norm_abs_diff, wid = part_id, within = op_type) %>%
#   get_anova_table() %>%
#   adjust_pvalue(method = "bonferroni")
# one.way
#
# #################### Effect of ring_id for each op_type ####################
# one.way <- task_df %>%
#   group_by(op_type) %>%
#   anova_test(dv = norm_abs_diff, wid = part_id, within = ring_id) %>%
#   get_anova_table() %>%
#   adjust_pvalue(method = "bonferroni")
# one.way
# #################### Pairwise comparisons between op_type groups for each ring_id ####################
# pwc1 <- task_df %>%
#   group_by(fitts_id_level) %>%
#   pairwise_t_test(
#     norm_abs_diff ~ op_type, paired = TRUE,
#     p.adjust.method = "bonferroni"
#     )
# pwc1
# # Create a box plot
# pwc1 <- pwc1 %>% add_xy_position(x = "op_type", group = "fitts_id_level")
# bxp2 <- ggboxplot(
#   task_df, x = "op_type", y = "norm_abs_diff",
#   color = "fitts_id_level", palette = "jco"
# ) +
#   stat_pvalue_manual(
#     pwc1, color = "fitts_id_level", group.by = "legend.var",
#     bracket.nudge.y = 0.2, step.increase = 0.15, label.size = 3, vjust = 0.1,
#     tip.length = 0, y.position = 20
#   )
# bxp2
#
#
# #################### Pairwise comparisons between ring_id groups for each op_type ####################
# pwc2 <- task_df %>%
#   group_by(op_type) %>%
#   pairwise_t_test(
#     norm_abs_diff ~ fitts_id_level, paired = TRUE,
#     p.adjust.method = "bonferroni"
#     )
# pwc2
# # Create a box plot
# pwc2 <- pwc2 %>% add_xy_position(x = "fitts_id_level", group = "op_type")
# bxp3 <- ggboxplot(
#   task_df, x = "fitts_id_level", y = "norm_abs_diff",
#   color = "op_type", palette = "jco"
# ) +
#   stat_pvalue_manual(
#     pwc2, color = "op_type", group.by = "legend.var",
#     bracket.nudge.y = 0.2, step.increase = 0.5, label.size = 3, vjust = 0.1,
#     tip.length = 0, y.position = 20
#   )
# bxp3
bxp1 <- ggboxplot(task_df, x = "op_type", y = "norm_abs_diff",
color = "op_type", palette = c("#00AFBB", "#E7B800", "#FC4E07"),
order = c("kt", "teleop"),
ylab = "Level of serial execution", xlab = "Operation Type")
bxp1
