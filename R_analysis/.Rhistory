x1_seq <- seq(min(kt_df$path_trans), max(kt_df$path_trans), length.out = 50)
x2_seq <- seq(min(kt_df$path_rot), max(kt_df$path_rot), length.out = 50)
grid <- expand.grid(x1 = x1_seq, x2 = x2_seq)
# Predict y values using the fitted model
grid$y <- predict(model, newdata = grid, re.form = NA)
# ###### fit linear mixed model 1 ######
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id),
data = kt_df)
summary(model)
# Fit the linear regression model
model <- lm(move_time ~ path_trans + path_rot, data = df)
# ###### fit linear mixed model 1 ######
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id),
data = kt_df)
summary(model)
# Fit the linear regression model
model <- lm(move_time ~ path_trans + path_rot, data = kt_df)
# Summarize the model
summary(model)
###### fit linear mixed model 2 ######
# fit <- lm(move_time ~ path_trans * path_rot, data = kt_df)
# # summary(fit)
#
# interact_plot(fit, pred = fitts_id_num, modx = auto_level,
#               interval = TRUE, int.type = "confidence", int.width = .8,
#               plot.points = TRUE,
#               x.label="Fitts ID", y.label="Move time (s)",
#               modx.labels = c("low", "med", "high")
#               )
# ###### fit linear mixed model 1 ######
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id),
data = kt_df)
summary(model)
# Fit the linear regression model
model <- lm(move_time ~ path_trans * path_rot, data = kt_df)
# Summarize the model
summary(model)
###### fit linear mixed model 2 ######
# fit <- lm(move_time ~ path_trans * path_rot, data = kt_df)
# # summary(fit)
#
# interact_plot(fit, pred = fitts_id_num, modx = auto_level,
#               interval = TRUE, int.type = "confidence", int.width = .8,
#               plot.points = TRUE,
#               x.label="Fitts ID", y.label="Move time (s)",
#               modx.labels = c("low", "med", "high")
#               )
# ###### fit linear mixed model 1 ######
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id),
data = kt_df)
summary(model)
# Fit the linear regression model
model <- lm(move_time ~ path_trans + path_rot, data = kt_df)
# Summarize the model
summary(model)
###### fit linear mixed model 2 ######
# fit <- lm(move_time ~ path_trans * path_rot, data = kt_df)
# # summary(fit)
#
# interact_plot(fit, pred = fitts_id_num, modx = auto_level,
#               interval = TRUE, int.type = "confidence", int.width = .8,
#               plot.points = TRUE,
#               x.label="Fitts ID", y.label="Move time (s)",
#               modx.labels = c("low", "med", "high")
#               )
# ###### fit linear mixed model 1 ######
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id),
data = kt_df)
summary(model)
# Fit the linear regression model
model <- lm(move_time ~ path_trans + path_rot + (1|part_id), data = kt_df)
# Summarize the model
summary(model)
###### fit linear mixed model 2 ######
# fit <- lm(move_time ~ path_trans * path_rot, data = kt_df)
# # summary(fit)
#
# interact_plot(fit, pred = fitts_id_num, modx = auto_level,
#               interval = TRUE, int.type = "confidence", int.width = .8,
#               plot.points = TRUE,
#               x.label="Fitts ID", y.label="Move time (s)",
#               modx.labels = c("low", "med", "high")
#               )
# ###### fit linear mixed model 1 ######
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id),
data = kt_df)
summary(model)
# Fit the linear regression model
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
# Summarize the model
summary(model)
# Fit the linear regression model - Kinesthetic teaching
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
# Summarize the model
summary(model)
# Fit the linear regression model - teleoperation
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = teleop_df)
# Summarize the model
summary(model)
# Fit the linear regression model - Kinesthetic teaching
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Fit the linear regression model - teleoperation
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = teleop_df)
# Summarize the model
summary(model)
# Fit the linear regression model - Kinesthetic teaching
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(ggcorrplot)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
install.packages("ggcorrplot")
library(ggcorrplot)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
# install.packages("ggcorrplot")
library(ggcorrplot)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(ggcorrplot)
# Fit the linear regression model - Kinesthetic teaching
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Remove the Customer Value column
# reduced_data <- subset(kt_df, select = -Customer_Value)
# Compute correlation at 2 decimal places
corr_matrix = round(cor(kt_df), 2)
# Compute and show the  result
ggcorrplot(corr_matrix, hc.order = TRUE, type = "lower",
lab = TRUE)
# Fit the linear regression model - Kinesthetic teaching
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the linear regression model - teleoperation
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = teleop_df)
# Summarize the model
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the linear regression model - Kinesthetic teaching
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
model <- lmer(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Fit the linear regression model - Kinesthetic teaching
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Fit the linear regression model - Kinesthetic teaching
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
model <- lmer(move_time ~ path_trans * path_rot + (1|part_id), data = kt_df)
summary(model)
# Fit the linear regression model - Kinesthetic teaching
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the linear regression model - Kinesthetic teaching
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the linear regression model - Kinesthetic teaching
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(ggcorrplot)
library(lmerTest)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(ggcorrplot)
library(lmerTest)
# Fit the linear regression model - Kinesthetic teaching
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the linear regression model - Kinesthetic teaching
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Fit the linear regression model - teleoperation
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = teleop_df)
# Summarize the model
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the linear regression model - Kinesthetic teaching
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Fit the linear regression model - teleoperation
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = teleop_df)
# Summarize the model
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the linear regression model - Kinesthetic teaching
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = teleop_df)
summary(model)
# # Fit the linear regression model - Kinesthetic teaching
# model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
# summary(model)
# Get the model residuals
model_residuals = model$residuals
# Fit the linear regression model - Kinesthetic teaching
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the linear regression model - Kinesthetic teaching
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Fit the multiple regression model - teleoperation
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = teleop_df)
# Summarize the model
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the mixed multiple regression model with interaction - teleoperation
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = teleop_df)
summary(model)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(ggcorrplot)
library(lmerTest)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(ggcorrplot)
library(lmerTest)
setwd("C:/Users/micha/OneDrive/My_GitHub_Repos/FittsTaxonomy/user_study_results/combined_headers/")
kt_df <- read_csv("kt.csv", show_col_types = FALSE)
teleop_df <- read_csv("teleop.csv", show_col_types = FALSE)
# Fit the multiple regression model - Kinesthetic teaching
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the mixed multiple regression model with interaction - Kinesthetic teaching
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Fit the multiple regression model - teleoperation
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = teleop_df)
# Summarize the model
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the mixed multiple regression model with interaction - teleoperation
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = teleop_df)
summary(model)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(ggcorrplot)
library(lmerTest)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(ggcorrplot)
library(lmerTest)
setwd("C:/Users/micha/OneDrive/My_GitHub_Repos/FittsTaxonomy/user_study_results/combined_headers/")
kt_df <- read_csv("kt.csv", show_col_types = FALSE)
teleop_df <- read_csv("teleop.csv", show_col_types = FALSE)
# Fit the multiple regression model - Kinesthetic teaching
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the mixed multiple regression model with interaction - Kinesthetic teaching
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Fit the multiple regression model - teleoperation
model <- lm(move_time ~ path_trans + path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = teleop_df)
# Summarize the model
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the mixed multiple regression model with interaction - teleoperation
model <- lmer(move_time ~ path_trans * path_rot + (1+path_trans|part_id) + (1+path_rot|part_id) + (1|part_id), data = teleop_df)
summary(model)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(stats)
library(lme4)
library(dplyr)
library(ez)
library(ltm)
library(interactions)
library(ggcorrplot)
library(lmerTest)
setwd("C:/Users/micha/OneDrive/My_GitHub_Repos/FittsTaxonomy/user_study_results/combined_headers/")
kt_df <- read_csv("kt.csv", show_col_types = FALSE)
teleop_df <- read_csv("teleop.csv", show_col_types = FALSE)
# Fit the multiple regression model - Kinesthetic teaching
model <- lm(move_time ~ trans + rot + (1+trans|part_id) + (1+rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the mixed multiple regression model with interaction - Kinesthetic teaching
model <- lmer(move_time ~ trans * rot + (1+trans|part_id) + (1+rot|part_id) + (1|part_id), data = kt_df)
summary(model)
# Fit the multiple regression model - teleoperation
model <- lm(move_time ~ trans + rot + (1+trans|part_id) + (1+rot|part_id) + (1|part_id), data = teleop_df)
# Summarize the model
summary(model)
# Get the model residuals
model_residuals = model$residuals
hist(model_residuals)
# Plot the residuals
qqnorm(model_residuals)
# Plot the Q-Q line
qqline(model_residuals)
# Fit the mixed multiple regression model with interaction - teleoperation
model <- lmer(move_time ~ trans * rot + (1+trans|part_id) + (1+rot|part_id) + (1|part_id), data = teleop_df)
summary(model)
